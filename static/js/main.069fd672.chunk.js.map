{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","nanoid","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","pending","console","log","fulfilled","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","onClick","TodoList","useSelector","useEffect","map","TotalCompleteItems","completeTodos","length","App","persistConfig","key","storage","combineReducers","todoReducer","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069fd672.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\n\nexport const getTodosAsync = createAsyncThunk(\n  \"todos/getTodosAsync\",\n  async () => {\n    const resp = await fetch(\"http://localhost:3000/todos\");\n    if (resp.ok) {\n      const todos = await resp.json();\n      return { todos };\n    }\n  }\n);\nexport const addTodoAsync = createAsyncThunk(\n  \"todos/addTodoAsync\",\n  async (payload) => {\n    const resp = await fetch(\"http://localhost:3000/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title: payload.title }),\n    });\n\n    if (resp.ok) {\n      const todo = await resp.json();\n      return { todo };\n    }\n  }\n);\n\nexport const toggleCompleteAsync = createAsyncThunk(\n  \"todos/completeTodoAsync\",\n  async (payload) => {\n    const resp = await fetch(`http://localhost:3000/todos/${payload.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ completed: payload.completed }),\n    });\n\n    if (resp.ok) {\n      const todo = await resp.json();\n      return { todo };\n    }\n  }\n);\n\nexport const deleteTodoAsync = createAsyncThunk(\n  \"todos/deleteTodoAsync\",\n  async (payload) => {\n    const resp = await fetch(`http://localhost:3000/todos/${payload.id}`, {\n      method: \"DELETE\",\n    });\n\n    if (resp.ok) {\n      return { id: payload.id };\n    }\n  }\n);\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: nanoid(),\n        title: action.payload.title,\n        completed: false,\n      };\n      state.push(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload.id);\n    },\n  },\n  extraReducers: {\n    [getTodosAsync.pending]: (state, action) => {\n      console.log(\"fetching data\");\n    },\n    [getTodosAsync.fulfilled]: (state, action) => {\n      console.log(\"fetching data completed\");\n      return action.payload.todos;\n    },\n    [addTodoAsync.fulfilled]: (state, action) => {\n      state.push(action.payload.todo);\n    },\n    [toggleCompleteAsync.fulfilled]: (state, action) => {\n      const index = state.findIndex(\n        (todo) => todo.id === action.payload.todo.id\n      );\n      state[index].completed = action.payload.todo.completed;\n    },\n    [deleteTodoAsync.fulfilled]: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodoAsync } from \"../redux/todoSlice\";\n\nconst AddTodoForm = () => {\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"user entered: \" + value);\n\n    if (value) {\n      dispatch(\n        addTodoAsync({\n          title: value,\n        })\n      );\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"form-inline mt-3 mb-3\">\n      <label className=\"sr-only\">Name</label>\n      <input\n        type=\"text\"\n        className=\"form-control mb-2 mr-sm-2\"\n        placeholder=\"Add todo...\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      ></input>\n\n      <button type=\"submit\" className=\"btn btn-primary mb-2\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import { useDispatch } from \"react-redux\";\nimport { toggleCompleteAsync, deleteTodoAsync } from \"../redux/todoSlice\";\n\nconst TodoItem = ({ id, title, completed }) => {\n  const dispatch = useDispatch();\n\n  const handleCompleteClick = () => {\n    dispatch(toggleCompleteAsync({ id, completed: !completed }));\n  };\n\n  const handleDeleteClick = () => {\n    dispatch(deleteTodoAsync({ id }));\n  };\n  return (\n    <li className={`list-group-item ${completed && \"list-group-item-success\"}`}>\n      <div className=\"d-flex justify-content-between\">\n        <span className=\"d-flex align-items-center\">\n          <input\n            type=\"checkbox\"\n            className=\"mr-3\"\n            checked={completed}\n            onChange={handleCompleteClick}\n          ></input>\n          {title}\n        </span>\n        <button className=\"btn btn-danger\" onClick={handleDeleteClick}>\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useEffect } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTodosAsync } from \"../redux/todoSlice\";\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos);\n  console.log(todos);\n\n  useEffect(() => {\n    dispatch(getTodosAsync());\n  }, [dispatch]);\n\n  return (\n    <ul className=\"list-group\">\n      {todos.map((todo) => (\n        <TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nconst TotalCompleteItems = () => {\n  const completeTodos = useSelector((state) =>\n    state.todos.filter((todo) => todo.completed === true)\n  );\n  return <h4 className=\"mt-3\">Total Complete Items: {completeTodos.length}</h4>;\n};\n\nexport default TotalCompleteItems;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport TotalCompleteItems from './components/TotalCompleteItems';\n\nconst App = () => {\n\treturn (\n\t\t<div className='container bg-white p-4 mt-5'>\n\t\t\t<h1>My Todo List</h1>\n\t\t\t<AddTodoForm />\n\t\t\t<TodoList />\n\t\t\t<TotalCompleteItems />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"./todoSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"to-do\",\n  storage,\n};\nconst reducers = combineReducers({ todos: todoReducer });\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport default configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}